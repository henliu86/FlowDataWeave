import { UX } from '@salesforce/command';
import { Connection, Logger, Messages } from '@salesforce/core';
import { TransformData, UploadRecordResult } from './interfaces';
export declare class BaseMigrationTool {
    protected static readonly NAME_LENGTH = 250;
    protected readonly namespace: string;
    protected readonly connection: Connection;
    protected readonly namespacePrefix: string;
    protected readonly logger: Logger;
    protected readonly messages: Messages;
    protected readonly ux: UX;
    constructor(namespace: string, connection: Connection, logger: Logger, messages: Messages, ux: UX);
    protected uploadTransformedData(objectName: string, transformedData: TransformData): Promise<Map<string, UploadRecordResult>>;
    protected updateData(transformedData: TransformData): Promise<Map<string, UploadRecordResult>>;
    /**
     * If applicable, removes the namespace prefix from the name of an object property
     *
     * @param fieldName The property name to clean out. Might or might not have the namespace as prefix
     * @returns The property without prefix
     */
    protected getCleanFieldName(fieldName: string): string;
    protected validMetaDataName(name: string): boolean;
    protected cleanName(name: string, allowUnderscores?: boolean): string;
    protected truncate(objectName: string): Promise<void>;
    /**
     * Stores any errors found while validating the source record in the record object
     *
     * @param record The custom object record
     * @param errors An array of errors related to the custom object record
     */
    protected setRecordErrors(record: unknown, ...errors: string[]): void;
    protected reportProgress(total: number, current: number): void;
}
