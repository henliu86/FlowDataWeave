import { Connection } from '@salesforce/core';
import { UploadRecordResult } from '../../migration/interfaces';
declare class NetUtils {
    private static readonly CHUNK_SIZE;
    static create(connection: Connection, objectName: string, data: any[]): Promise<Map<string, UploadRecordResult>>;
    static createOne(connection: Connection, objectName: string, referenceId: string, data: any): Promise<UploadRecordResult>;
    static updateOne(connection: Connection, objectName: string, referenceId: string, recordId: string, data: any): Promise<UploadRecordResult>;
    static update(connection: Connection, data: any[]): Promise<Map<string, UploadRecordResult>>;
    static delete(connection: Connection, data: string[]): Promise<boolean>;
    static request<TResultType>(connection: Connection, url: string, data: any, method: RequestMethod): Promise<TResultType>;
}
declare enum RequestMethod {
    POST = "post",
    GET = "get",
    PATCH = "patch",
    DELETE = "delete"
}
interface TreeResult {
    hasErrors: boolean;
    results: UploadRecordResult[];
}
export { NetUtils, RequestMethod, TreeResult };
