"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebugTimer = void 0;
/* eslint-disable */
class DebugTimer {
    constructor() { }
    static getInstance() {
        if (!this.instance) {
            this.instance = new DebugTimer();
        }
        return this.instance;
    }
    start() {
        this.complete = false;
        this.startTime = Date.now();
        this.laps = [];
        this.currentLap = {
            name: 'Timer Start',
            start: this.startTime
        };
    }
    lap(name) {
        if (this.complete)
            throw new Error('Timer is complete');
        const curr = Date.now();
        // Close previous lap
        this.laps.push(this.buildLap(curr));
        // New lap
        this.currentLap = {
            name,
            start: curr
        };
    }
    stop() {
        this.lap('End');
        const curr = Date.now();
        this.complete = true;
        // Close previous lap
        this.laps.push(this.buildLap(curr));
        return this.laps;
    }
    buildLap(curr) {
        return {
            ...this.currentLap,
            end: curr,
            total: this.msToTime(curr - this.currentLap.start),
            accumulated: this.msToTime(curr - this.startTime)
        };
    }
    msToTime(s) {
        // Pad to 2 or 3 digits, default is 2
        var pad = (n, z = 2) => ('00' + n).slice(-z);
        return pad(s / 3.6e6 | 0) + ':' + pad((s % 3.6e6) / 6e4 | 0) + ':' + pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 3);
    }
}
exports.DebugTimer = DebugTimer;
//# sourceMappingURL=debugtimer.js.map